@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap");
* {
  margin: 0%;
  padding: 0%;
  font-family: "Open Sans", sans-serif;
}

$bk: #0e6cc4;
$in: #fff;
$btt: rgb(0, 115, 223);
body {
  background-color: $bk;
}

.c-red {
  color: red;
}

.c-green {
  color: green;
}

.inlogvoer {
  background-color: $in;
  width: 400px;
  min-height: 400px;
  margin-top: 200px !important;
  margin: auto;
  border-radius: 15px;
  text-align: center;
  box-shadow: 10px 10px 50px 25px rgba(0, 0, 0, 0.568);
  padding-bottom: 10px;
  
  p {
    margin-top: 10px;
  }

  h1 {
    padding-top: 30px;
    font-size: 40px;
  }

  input {
    margin-top: 25px;
    // font-size: 35px;
    height: 40px;
    width: 80%;
    border: 1px solid rgba(0, 0, 0, 0.219);
    border-radius: 4px;
    margin: 8px 0;
    padding: 12px 20px;
    // margin-left: 100px;
  }

  // .ml {
  //         margin-top: 50px;
  //         // font-size: 35px;
  //         height: 40px;
  //         width: 90%;
  //         border: 1px solid rgba(0, 0, 0, 0.219);

  //         // margin-left: 100px;
  //       }

  // .pw {
  //         margin-top: 25px;
  //         // font-size: 35px;
  //         height: 40px;
  //         width: 90%;
  //         border: 1px solid rgba(0, 0, 0, 0.219);
  //         border-radius: 4px;
  //         // margin-left: 100px;
  //       }
  .rimid {
    margin-top: 25px;
    font-variant: inherit;
  }
  #submit {
    margin-top: 15px;
    width: 350px;
    height: 40px;
    font-size: large;
    background-color: $btt;
    color: #fff;
    border-radius: 10px;
  }
}
$bubble-count: 50;
$sway-type: "sway-left-to-right", "sway-right-to-left";

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

@function sample($list) {
  @return nth($list, random(length($list)));
}

.bubbles {
  position: relative;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

.bubble {
  position: absolute;
  left: var(--bubble-left-offset);
  bottom: -75%;
  display: block;
  width: var(--bubble-radius);
  height: var(--bubble-radius);
  border-radius: 50%;
  animation: float-up var(--bubble-float-duration) var(--bubble-float-delay)
    ease-in infinite;
  z-index: -1;

  &::before {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: hsla(183, 94%, 76%, 0.3);
    border-radius: inherit;
    animation: var(--bubble-sway-type) var(--bubble-sway-duration)
      var(--bubble-sway-delay) ease-in-out alternate infinite;
  }

  @for $i from 0 through $bubble-count {
    &:nth-child(#{$i}) {
      --bubble-left-offset: #{random_range(0vw, 100vw)};
      --bubble-radius: #{random_range(1vw, 10vw)};
      --bubble-float-duration: #{random_range(6s, 12s)};
      --bubble-sway-duration: #{random_range(4s, 6s)};
      --bubble-float-delay: #{random_range(0s, 4s)};
      --bubble-sway-delay: #{random_range(0s, 4s)};
      --bubble-sway-type: #{sample($sway-type)};
    }
  }
}

@keyframes float-up {
  to {
    transform: translateY(-175vh);
  }
}

@keyframes sway-left-to-right {
  from {
    transform: translateX(-100%);
  }

  to {
    transform: translateX(100%);
  }
}

@keyframes sway-right-to-left {
  from {
    transform: translateX(100%);
  }

  to {
    transform: translateX(-100%);
  }
}
